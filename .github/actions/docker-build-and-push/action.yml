name: 'Hello World'
description: 'Greet someone'
inputs:
  module-name:  # id of input
    description: 'Which module to run spring-boot:build-image'
    required: true
  password:  # id of input
    description: 'Github token'
    required: true

runs:
  using: "composite"
  steps:
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Install dependencies
      shell: bash
      run: mvn install -Dmaven.test.skip=true
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        # list of Docker images to use as base name for tags
        images: |
          ghcr.io/jiangtj/${{ inputs.module-name }}
        # generate Docker tags based on the following events/attributes
        tags: |
          type=schedule
          type=ref,event=branch
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}
          type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.password }}
    - name: Build image
      shell: bash
      run: |
        mvn -pl ${{ inputs.module-name }} -Dmaven.test.skip=true \
        -Ddocker.image.name=ghcr.io/jiangtj/${{ inputs.module-name }} \
        -Ddocker.image.tags=${{ join( fromJSON(steps.meta.outputs.json).tags, ',' ) }} \
        spring-boot:build-image
    - name: Push
      shell: bash
      run: |
        docker push -a ghcr.io/jiangtj/${{ inputs.module-name }}