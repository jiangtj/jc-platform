/*
 * This file is generated by jOOQ.
 */
package com.jiangtj.platform.system.jooq.tables.daos;


import com.jiangtj.platform.sql.jooq.PageUtils;
import com.jiangtj.platform.system.jooq.tables.SystemUserRole;
import com.jiangtj.platform.system.jooq.tables.records.SystemUserRoleRecord;
import org.jooq.Condition;
import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Repository;

import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class SystemUserRoleDao extends DAOImpl<SystemUserRoleRecord, com.jiangtj.platform.system.jooq.tables.pojos.SystemUserRole, Record2<Long, String>> {

    /**
     * Create a new SystemUserRoleDao without any configuration
     */
    public SystemUserRoleDao() {
        super(SystemUserRole.SYSTEM_USER_ROLE, com.jiangtj.platform.system.jooq.tables.pojos.SystemUserRole.class);
    }

    /**
     * Create a new SystemUserRoleDao with an attached configuration
     */
    @Autowired
    public SystemUserRoleDao(Configuration configuration) {
        super(SystemUserRole.SYSTEM_USER_ROLE, com.jiangtj.platform.system.jooq.tables.pojos.SystemUserRole.class, configuration);
    }

    @Override
    public Record2<Long, String> getId(com.jiangtj.platform.system.jooq.tables.pojos.SystemUserRole object) {
        return compositeKeyRecord(object.userId(), object.role());
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.jiangtj.platform.system.jooq.tables.pojos.SystemUserRole> fetchRangeOfUserId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(SystemUserRole.SYSTEM_USER_ROLE.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<com.jiangtj.platform.system.jooq.tables.pojos.SystemUserRole> fetchByUserId(Long... values) {
        return fetch(SystemUserRole.SYSTEM_USER_ROLE.USER_ID, values);
    }

    /**
     * Fetch records that have <code>role BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.jiangtj.platform.system.jooq.tables.pojos.SystemUserRole> fetchRangeOfRole(String lowerInclusive, String upperInclusive) {
        return fetchRange(SystemUserRole.SYSTEM_USER_ROLE.ROLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>role IN (values)</code>
     */
    public List<com.jiangtj.platform.system.jooq.tables.pojos.SystemUserRole> fetchByRole(String... values) {
        return fetch(SystemUserRole.SYSTEM_USER_ROLE.ROLE, values);
    }

    /**
     * Fetch pages with pageable and conditions.
     */
    public Page<com.jiangtj.platform.system.jooq.tables.pojos.SystemUserRole> fetchPage(Pageable pageable, Condition... conditions) {
        return PageUtils.selectFrom(ctx(), getTable())
        .conditions(conditions)
        .pageable(pageable)
        .fetchPage(getType());
    }
}
