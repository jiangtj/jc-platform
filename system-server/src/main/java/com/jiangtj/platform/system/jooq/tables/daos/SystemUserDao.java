/*
 * This file is generated by jOOQ.
 */
package com.jiangtj.platform.system.jooq.tables.daos;


import com.jiangtj.platform.sql.jooq.PageUtils;
import com.jiangtj.platform.system.jooq.tables.SystemUser;
import com.jiangtj.platform.system.jooq.tables.records.SystemUserRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Condition;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Repository
public class SystemUserDao extends DAOImpl<SystemUserRecord, com.jiangtj.platform.system.jooq.tables.pojos.SystemUser, Long> {

    /**
     * Create a new SystemUserDao without any configuration
     */
    public SystemUserDao() {
        super(SystemUser.SYSTEM_USER, com.jiangtj.platform.system.jooq.tables.pojos.SystemUser.class);
    }

    /**
     * Create a new SystemUserDao with an attached configuration
     */
    @Autowired
    public SystemUserDao(Configuration configuration) {
        super(SystemUser.SYSTEM_USER, com.jiangtj.platform.system.jooq.tables.pojos.SystemUser.class, configuration);
    }

    @Override
    public Long getId(com.jiangtj.platform.system.jooq.tables.pojos.SystemUser object) {
        return object.id();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.jiangtj.platform.system.jooq.tables.pojos.SystemUser> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(SystemUser.SYSTEM_USER.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.jiangtj.platform.system.jooq.tables.pojos.SystemUser> fetchById(Long... values) {
        return fetch(SystemUser.SYSTEM_USER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.jiangtj.platform.system.jooq.tables.pojos.SystemUser fetchOneById(Long value) {
        return fetchOne(SystemUser.SYSTEM_USER.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.jiangtj.platform.system.jooq.tables.pojos.SystemUser> fetchOptionalById(Long value) {
        return fetchOptional(SystemUser.SYSTEM_USER.ID, value);
    }

    /**
     * Fetch records that have <code>username BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.jiangtj.platform.system.jooq.tables.pojos.SystemUser> fetchRangeOfUsername(String lowerInclusive, String upperInclusive) {
        return fetchRange(SystemUser.SYSTEM_USER.USERNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>username IN (values)</code>
     */
    public List<com.jiangtj.platform.system.jooq.tables.pojos.SystemUser> fetchByUsername(String... values) {
        return fetch(SystemUser.SYSTEM_USER.USERNAME, values);
    }

    /**
     * Fetch records that have <code>password BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.jiangtj.platform.system.jooq.tables.pojos.SystemUser> fetchRangeOfPassword(String lowerInclusive, String upperInclusive) {
        return fetchRange(SystemUser.SYSTEM_USER.PASSWORD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>password IN (values)</code>
     */
    public List<com.jiangtj.platform.system.jooq.tables.pojos.SystemUser> fetchByPassword(String... values) {
        return fetch(SystemUser.SYSTEM_USER.PASSWORD, values);
    }

    /**
     * Fetch records that have <code>is_deleted BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.jiangtj.platform.system.jooq.tables.pojos.SystemUser> fetchRangeOfIsDeleted(Byte lowerInclusive, Byte upperInclusive) {
        return fetchRange(SystemUser.SYSTEM_USER.IS_DELETED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_deleted IN (values)</code>
     */
    public List<com.jiangtj.platform.system.jooq.tables.pojos.SystemUser> fetchByIsDeleted(Byte... values) {
        return fetch(SystemUser.SYSTEM_USER.IS_DELETED, values);
    }

    /**
     * Fetch pages with pageable and conditions.
     */
    public Page<com.jiangtj.platform.system.jooq.tables.pojos.SystemUser> fetchPage(Pageable pageable, Condition... conditions) {
        return PageUtils.selectFrom(ctx(), getTable())
        .conditions(conditions)
        .pageable(pageable)
        .fetchPage(getType());
    }
}
