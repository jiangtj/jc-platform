/*
 * This file is generated by jOOQ.
 */
package com.jiangtj.platform.system.jooq.tables.records;


import com.jiangtj.platform.system.jooq.tables.SystemUser;

import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class SystemUserRecord extends UpdatableRecordImpl<SystemUserRecord> implements Record4<Long, String, String, Byte> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>jc_admin.system_user.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>jc_admin.system_user.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>jc_admin.system_user.username</code>.
     */
    public void setUsername(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>jc_admin.system_user.username</code>.
     */
    @NotNull
    @Size(max = 32)
    public String getUsername() {
        return (String) get(1);
    }

    /**
     * Setter for <code>jc_admin.system_user.password</code>.
     */
    public void setPassword(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>jc_admin.system_user.password</code>.
     */
    @NotNull
    @Size(max = 32)
    public String getPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>jc_admin.system_user.is_deleted</code>.
     */
    public void setIsDeleted(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>jc_admin.system_user.is_deleted</code>.
     */
    public Byte getIsDeleted() {
        return (Byte) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, String, Byte> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, String, String, Byte> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return SystemUser.SYSTEM_USER.ID;
    }

    @Override
    public Field<String> field2() {
        return SystemUser.SYSTEM_USER.USERNAME;
    }

    @Override
    public Field<String> field3() {
        return SystemUser.SYSTEM_USER.PASSWORD;
    }

    @Override
    public Field<Byte> field4() {
        return SystemUser.SYSTEM_USER.IS_DELETED;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getUsername();
    }

    @Override
    public String component3() {
        return getPassword();
    }

    @Override
    public Byte component4() {
        return getIsDeleted();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getUsername();
    }

    @Override
    public String value3() {
        return getPassword();
    }

    @Override
    public Byte value4() {
        return getIsDeleted();
    }

    @Override
    public SystemUserRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public SystemUserRecord value2(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public SystemUserRecord value3(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public SystemUserRecord value4(Byte value) {
        setIsDeleted(value);
        return this;
    }

    @Override
    public SystemUserRecord values(Long value1, String value2, String value3, Byte value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SystemUserRecord
     */
    public SystemUserRecord() {
        super(SystemUser.SYSTEM_USER);
    }

    /**
     * Create a detached, initialised SystemUserRecord
     */
    public SystemUserRecord(Long id, String username, String password, Byte isDeleted) {
        super(SystemUser.SYSTEM_USER);

        setId(id);
        setUsername(username);
        setPassword(password);
        setIsDeleted(isDeleted);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised SystemUserRecord
     */
    public SystemUserRecord(com.jiangtj.platform.system.jooq.tables.pojos.SystemUser value) {
        super(SystemUser.SYSTEM_USER);

        if (value != null) {
            setId(value.id());
            setUsername(value.username());
            setPassword(value.password());
            setIsDeleted(value.isDeleted());
            resetChangedOnNotNull();
        }
    }
}
