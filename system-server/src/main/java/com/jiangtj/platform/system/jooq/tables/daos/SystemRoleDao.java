/*
 * This file is generated by jOOQ.
 */
package com.jiangtj.platform.system.jooq.tables.daos;


import com.jiangtj.platform.sql.jooq.PageUtils;
import com.jiangtj.platform.system.jooq.tables.SystemRole;
import com.jiangtj.platform.system.jooq.tables.records.SystemRoleRecord;
import org.jooq.Condition;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Repository;

import java.util.List;
import java.util.Optional;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class SystemRoleDao extends DAOImpl<SystemRoleRecord, com.jiangtj.platform.system.jooq.tables.pojos.SystemRole, String> {

    /**
     * Create a new SystemRoleDao without any configuration
     */
    public SystemRoleDao() {
        super(SystemRole.SYSTEM_ROLE, com.jiangtj.platform.system.jooq.tables.pojos.SystemRole.class);
    }

    /**
     * Create a new SystemRoleDao with an attached configuration
     */
    @Autowired
    public SystemRoleDao(Configuration configuration) {
        super(SystemRole.SYSTEM_ROLE, com.jiangtj.platform.system.jooq.tables.pojos.SystemRole.class, configuration);
    }

    @Override
    public String getId(com.jiangtj.platform.system.jooq.tables.pojos.SystemRole object) {
        return object.key();
    }

    /**
     * Fetch records that have <code>key BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.jiangtj.platform.system.jooq.tables.pojos.SystemRole> fetchRangeOfKey(String lowerInclusive, String upperInclusive) {
        return fetchRange(SystemRole.SYSTEM_ROLE.KEY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>key IN (values)</code>
     */
    public List<com.jiangtj.platform.system.jooq.tables.pojos.SystemRole> fetchByKey(String... values) {
        return fetch(SystemRole.SYSTEM_ROLE.KEY, values);
    }

    /**
     * Fetch a unique record that has <code>key = value</code>
     */
    public com.jiangtj.platform.system.jooq.tables.pojos.SystemRole fetchOneByKey(String value) {
        return fetchOne(SystemRole.SYSTEM_ROLE.KEY, value);
    }

    /**
     * Fetch a unique record that has <code>key = value</code>
     */
    public Optional<com.jiangtj.platform.system.jooq.tables.pojos.SystemRole> fetchOptionalByKey(String value) {
        return fetchOptional(SystemRole.SYSTEM_ROLE.KEY, value);
    }

    /**
     * Fetch pages with pageable and conditions.
     */
    public Page<com.jiangtj.platform.system.jooq.tables.pojos.SystemRole> fetchPage(Pageable pageable, Condition... conditions) {
        return PageUtils.selectFrom(ctx(), getTable())
        .conditions(conditions)
        .pageable(pageable)
        .fetchPage(getType());
    }
}
