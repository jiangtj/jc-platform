/*
 * This file is generated by jOOQ.
 */
package com.jiangtj.platform.system.jooq.tables.records;


import com.jiangtj.platform.system.jooq.tables.SystemOperateRecord;

import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class SystemOperateRecordRecord extends UpdatableRecordImpl<SystemOperateRecordRecord> implements Record4<Long, LocalDateTime, Long, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>jc_admin.system_operate_record.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>jc_admin.system_operate_record.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>jc_admin.system_operate_record.create_time</code>.
     */
    public void setCreateTime(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>jc_admin.system_operate_record.create_time</code>.
     */
    @NotNull
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>jc_admin.system_operate_record.operator</code>.
     */
    public void setOperator(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>jc_admin.system_operate_record.operator</code>.
     */
    @NotNull
    public Long getOperator() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>jc_admin.system_operate_record.content</code>.
     */
    public void setContent(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>jc_admin.system_operate_record.content</code>.
     */
    @NotNull
    @Size(max = 256)
    public String getContent() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, LocalDateTime, Long, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, LocalDateTime, Long, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return SystemOperateRecord.SYSTEM_OPERATE_RECORD.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return SystemOperateRecord.SYSTEM_OPERATE_RECORD.CREATE_TIME;
    }

    @Override
    public Field<Long> field3() {
        return SystemOperateRecord.SYSTEM_OPERATE_RECORD.OPERATOR;
    }

    @Override
    public Field<String> field4() {
        return SystemOperateRecord.SYSTEM_OPERATE_RECORD.CONTENT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getCreateTime();
    }

    @Override
    public Long component3() {
        return getOperator();
    }

    @Override
    public String component4() {
        return getContent();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getCreateTime();
    }

    @Override
    public Long value3() {
        return getOperator();
    }

    @Override
    public String value4() {
        return getContent();
    }

    @Override
    public SystemOperateRecordRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public SystemOperateRecordRecord value2(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public SystemOperateRecordRecord value3(Long value) {
        setOperator(value);
        return this;
    }

    @Override
    public SystemOperateRecordRecord value4(String value) {
        setContent(value);
        return this;
    }

    @Override
    public SystemOperateRecordRecord values(Long value1, LocalDateTime value2, Long value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SystemOperateRecordRecord
     */
    public SystemOperateRecordRecord() {
        super(SystemOperateRecord.SYSTEM_OPERATE_RECORD);
    }

    /**
     * Create a detached, initialised SystemOperateRecordRecord
     */
    public SystemOperateRecordRecord(Long id, LocalDateTime createTime, Long operator, String content) {
        super(SystemOperateRecord.SYSTEM_OPERATE_RECORD);

        setId(id);
        setCreateTime(createTime);
        setOperator(operator);
        setContent(content);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised SystemOperateRecordRecord
     */
    public SystemOperateRecordRecord(com.jiangtj.platform.system.jooq.tables.pojos.SystemOperateRecord value) {
        super(SystemOperateRecord.SYSTEM_OPERATE_RECORD);

        if (value != null) {
            setId(value.id());
            setCreateTime(value.createTime());
            setOperator(value.operator());
            setContent(value.content());
            resetChangedOnNotNull();
        }
    }
}
